# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        """
        :type list1: Optional[ListNode]
        :type list2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        result = []
        
        before = list1

        while before != None:
            result.append(before.val)

            before = before.next

        before = list2

        while before != None:
            result.append(before.val)
            before = before.next

        result.sort()
        result.reverse()

        if len(result) == 0:return

        node = ListNode(val=result[0])

        for (idx, i) in enumerate(result):
            if idx == 0: continue
            newNode = ListNode(val=i, next=node)
            node = newNode

        return node


